services:
  postgres:
    image: postgres:15-alpine
    container_name: siga-postgres
    environment:
      POSTGRES_DB: siga_saas
      POSTGRES_USER: siga_saas
      POSTGRES_PASSWORD: siga_saas
      POSTGRES_INITDB_ARGS: "-E UTF8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      # Only mount the extensions script, not table creation
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-extensions.sql:ro
    ports:
      - "5432:5432"
    networks:
      - siga-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d school_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: siga-redis
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - siga-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: siga-jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC receiver
      - "4318:4318"    # OTLP HTTP receiver
    networks:
      - siga-network

  prometheus:
    image: prom/prometheus:latest
    container_name: siga-prometheus
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - siga-network
    depends_on:
      - postgres

  grafana:
    image: grafana/grafana:latest
    container_name: siga-grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_INSTALL_PLUGINS: redis-datasource
    volumes:
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    networks:
      - siga-network
    depends_on:
      - prometheus

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  siga-network:
    driver: bridge

---
# ========= compose-dev.yaml - Minimal Version for Quick Start =========
# Minimal services for development (without monitoring)

services:
  postgres:
    image: postgres
    container_name: siga-postgres-dev
    environment:
      POSTGRES_DB: school_management
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
     # - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/01-extensions.sql:ro
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d school_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: siga-redis-dev
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_dev_data:
    driver: local